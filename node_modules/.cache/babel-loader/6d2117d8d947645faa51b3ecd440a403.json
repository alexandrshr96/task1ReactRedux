{"ast":null,"code":"import _classCallCheck from \"/home/qa/project/react/todoReactRedux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/qa/project/react/todoReactRedux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/qa/project/react/todoReactRedux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/qa/project/react/todoReactRedux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/qa/project/react/todoReactRedux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/qa/project/react/todoReactRedux/src/App/component/Main/Main.js\";\nimport React from 'react';\nimport TodoItem from './TodoItem/TodoItem';\nimport { ToggleAllInput, ToggleAllLabel, TodoList } from './MainStyle';\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      textFromEditInput: '',\n      editing: null\n    };\n\n    _this.toggleAll = function () {\n      var array = _this.props.store.getItem() || [];\n      array.every(function (el) {\n        return el.checked === true;\n      }) ? _this.removeCheckedAllItems(array) : _this.checkedAllItems(array);\n    };\n\n    _this.toggle = function (id) {\n      var array = _this.props.store.getItem() || [];\n      array.find(function (el) {\n        if (el.id === id) el.checked = !el.checked;\n      });\n\n      _this.props.store.setItem(array);\n\n      _this.props.reRender();\n    };\n\n    _this[\"delete\"] = function (id) {\n      var array = _this.props.store.getItem() || [];\n      array.splice(array.indexOf(array.find(function (el) {\n        return el.id === id;\n      })), 1);\n\n      _this.props.store.setItem(array);\n\n      _this.props.reRender();\n    };\n\n    _this.handleShowEdit = function (id) {\n      _this.setState({\n        editing: id\n      });\n    };\n\n    _this.handleChangeEditInput = function (e) {\n      _this.setState({\n        textFromEditInput: e.target.value\n      });\n    };\n\n    _this.handleSubmitEdit = function (e) {\n      if (e.keyCode !== 13) {\n        return;\n      }\n\n      e.preventDefault();\n\n      var array = _this.props.store.getItem();\n\n      var val = _this.state.textFromEditInput.trim();\n\n      if (!val) {\n        return;\n      }\n\n      array.find(function (el) {\n        if (el.id === +e.target.id) {\n          el.value = _this.state.textFromEditInput;\n        }\n      });\n\n      _this.props.store.setItem(array);\n\n      _this.props.reRender();\n\n      _this.setState({\n        editing: null,\n        textFromEditInput: ''\n      });\n    };\n\n    _this.handleChangeBlurInput = function () {\n      _this.setState({\n        editing: null,\n        textFromEditInput: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"checkedAllItems\",\n    value: function checkedAllItems(array) {\n      array.forEach(function (el) {\n        el.checked = true;\n      });\n      this.props.store.setItem(array);\n      this.props.reRender();\n    }\n  }, {\n    key: \"removeCheckedAllItems\",\n    value: function removeCheckedAllItems(array) {\n      array.forEach(function (el) {\n        el.checked = false;\n      });\n      this.props.store.setItem(array);\n      this.props.reRender();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var itemsLength = this.props.quantityItems;\n      var list = this.props.items;\n      var items;\n      var ToggleAllLabelWrapper;\n      var a;\n\n      if (itemsLength) {\n        ToggleAllLabelWrapper = ToggleAllLabel(this.props.completedCounter, this.props.quantityItems);\n        a = React.createElement(ToggleAllLabelWrapper, {\n          className: \"toggle-all-label\",\n          htmlFor: \"toggle-all\",\n          onClick: this.toggleAll,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        });\n      }\n\n      if (list) {\n        items = list.map(function (item) {\n          return React.createElement(TodoItem, {\n            store: _this2.props.store,\n            key: item.id,\n            id: item.id,\n            value: item.value,\n            checked: item.checked,\n            reRender: _this2.props.reRender,\n            items: _this2.props.items,\n            toggle: _this2.toggle,\n            \"delete\": _this2[\"delete\"],\n            handleShowEdit: _this2.handleShowEdit,\n            handleChangeEditInput: _this2.handleChangeEditInput,\n            handleSubmitEdit: _this2.handleSubmitEdit,\n            handleChangeBlurInput: _this2.handleChangeBlurInput,\n            editing: _this2.state.editing,\n            textFromEditInput: _this2.state.textFromEditInput,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          });\n        });\n      }\n\n      return React.createElement(\"section\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(ToggleAllInput, {\n        className: \"toggle-all\",\n        id: \"toggle-all\",\n        type: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), a, React.createElement(TodoList, {\n        className: \"todo-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, items));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default Main;","map":{"version":3,"sources":["/home/qa/project/react/todoReactRedux/src/App/component/Main/Main.js"],"names":["React","TodoItem","ToggleAllInput","ToggleAllLabel","TodoList","Main","state","textFromEditInput","editing","toggleAll","array","props","store","getItem","every","el","checked","removeCheckedAllItems","checkedAllItems","toggle","id","find","setItem","reRender","splice","indexOf","handleShowEdit","setState","handleChangeEditInput","e","target","value","handleSubmitEdit","keyCode","preventDefault","val","trim","handleChangeBlurInput","forEach","itemsLength","quantityItems","list","items","ToggleAllLabelWrapper","a","completedCounter","map","item","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TodoItem from './TodoItem/TodoItem';\nimport  {ToggleAllInput, ToggleAllLabel, TodoList} from './MainStyle';\n\nclass Main extends React.Component{\n  state = {\n    textFromEditInput: '',\n    editing: null,\n  }\n\n  toggleAll = () => {\n    const array = this.props.store.getItem() || [];\n\n    array.every(el=> el.checked === true) ?\n      this.removeCheckedAllItems(array)\n        : this.checkedAllItems(array);\n  }\n\n  checkedAllItems(array){\n    array.forEach(el=>{\n      el.checked = true;\n    })\n\n    this.props.store.setItem(array);\n    this.props.reRender();\n  }\n\n  removeCheckedAllItems(array){\n    array.forEach(el=>{\n      el.checked = false;\n    })\n\n    this.props.store.setItem(array);\n    this.props.reRender();\n  }\n\n  toggle = (id) => {\n    const array = this.props.store.getItem() || [];\n\n    array.find(el => {\n      if(el.id === id) el.checked = !el.checked\n    });\n\n    this.props.store.setItem(array);\n    this.props.reRender();\n  }\n\n  delete = (id) => {\n    const array = this.props.store.getItem() || [];\n\n    array.splice(array.indexOf(array.find(el=> el.id === id )),1);\n\n    this.props.store.setItem(array);\n    this.props.reRender();\n  }\n\n  handleShowEdit = (id) => {\n    this.setState({\n      editing: id\n    });\n  }\n\n  handleChangeEditInput = (e) => {\n    this.setState({\n      textFromEditInput: e.target.value,\n    });\n  }\n\n  handleSubmitEdit = (e) => {\n    if (e.keyCode !== 13) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const array = this.props.store.getItem();\n    let val = this.state.textFromEditInput.trim();\n\n    if(!val){\n      return;\n    }\n\n    array.find(el=>{\n      if(el.id === +(e.target.id)){\n        el.value = this.state.textFromEditInput;\n      }\n    })\n\n    this.props.store.setItem(array);\n    this.props.reRender();\n    this.setState({\n      editing: null,\n      textFromEditInput: ''\n    });\n  }\n\n  handleChangeBlurInput = () => {\n    this.setState({\n      editing: null,\n      textFromEditInput: ''\n    });\n  }\n\n  render(){\n    const itemsLength = this.props.quantityItems;\n    const list = this.props.items;\n    let items;\n    let ToggleAllLabelWrapper;\n    let a;\n\n    if(itemsLength){\n      ToggleAllLabelWrapper = ToggleAllLabel(this.props.completedCounter, this.props.quantityItems);\n       a = <ToggleAllLabelWrapper\n        className=\"toggle-all-label\"\n        htmlFor=\"toggle-all\"\n        onClick={this.toggleAll}>\n      </ToggleAllLabelWrapper>;\n    }\n\n    if(list){\n      items = list.map(item=>\n        <TodoItem\n          store={this.props.store}\n          key={item.id}\n          id={item.id}\n          value={item.value}\n          checked={item.checked}\n          reRender={this.props.reRender}\n          items={this.props.items}\n          toggle={this.toggle}\n          delete={this.delete}\n          handleShowEdit={this.handleShowEdit}\n          handleChangeEditInput={this.handleChangeEditInput}\n          handleSubmitEdit={this.handleSubmitEdit}\n          handleChangeBlurInput={this.handleChangeBlurInput}\n          editing={this.state.editing}\n          textFromEditInput={this.state.textFromEditInput}\n        />\n      )\n    }\n\n    return(\n      <section className=\"main\">\n        <ToggleAllInput\n          className=\"toggle-all\"\n          id=\"toggle-all\"\n          type=\"checkbox\">\n        </ToggleAllInput>\n        {a}\n        <TodoList className=\"todo-list\">\n          {items}\n        </TodoList>\n      </section>\n    );\n  }\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}