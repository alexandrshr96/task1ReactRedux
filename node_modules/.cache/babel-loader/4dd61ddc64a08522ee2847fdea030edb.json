{"ast":null,"code":"import _classCallCheck from \"/home/qa/project/react/todoReactRedux/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/qa/project/react/todoReactRedux/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/qa/project/react/todoReactRedux/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/qa/project/react/todoReactRedux/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/qa/project/react/todoReactRedux/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/qa/project/react/todoReactRedux/src/App/App.js\";\nimport React from 'react';\nimport Store from './Store';\nimport Header from './Header/Header';\nimport Main from './Main/Main';\nimport Footer from './Footer/Footer';\nvar initialValue = {\n  filter: 'all'\n};\nvar initState = new Store('initState');\ninitState.setItem(initialValue);\nvar filterItem = new Store('filterItem');\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleChangeInput = function (e) {\n      _this.setState({\n        textFromHeaderInput: e.target.value\n      });\n    };\n\n    _this.handleSubmitInput = function (e) {\n      if (e.keyCode !== 13) {\n        return;\n      }\n\n      e.preventDefault();\n\n      var todoItems = _this.state.todoItems.slice();\n\n      var val = _this.state.textFromHeaderInput.trim();\n\n      if (!val) {\n        return;\n      }\n\n      var newItem = {\n        id: Date.now(),\n        value: _this.state.textFromHeaderInput,\n        checked: false\n      };\n\n      _this.setState({\n        todoItems: todoItems.concat(newItem),\n        textFromHeaderInput: ''\n      });\n\n      _this.updateItemsStorage(newItem);\n\n      _this.filterUpdate();\n    };\n\n    _this.filterUpdate = function (filterName) {\n      var array = _this.store.getItem() || [];\n      var ff = filterItem.getItem() !== null ? filterItem.getItem() : initState.getItem().filter;\n      var name = filterName !== undefined ? filterName : ff;\n      var newArray = [];\n\n      if (array.length !== 0) {\n        newArray = name === 'active' ? array.filter(function (el) {\n          return el.checked === false;\n        }) : name === 'completed' ? array.filter(function (el) {\n          return el.checked === true;\n        }) : array;\n      }\n\n      filterItem.setItem(name);\n\n      _this.setState({\n        todoItems: newArray,\n        nowShowing: name\n      });\n    };\n\n    _this.clearCheckedElements = function () {\n      var array = _this.store.getItem() || [];\n\n      if (array.length !== 0) {\n        _this.store.setItem(array.filter(function (element) {\n          return !element.checked;\n        }));\n      }\n\n      _this.filterUpdate();\n    };\n\n    _this.state = {\n      todoItems: [],\n      textFromHeaderInput: '',\n      nowShowing: ''\n    };\n    _this.store = new Store('items');\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.filterUpdate();\n    } // componentDidUpdate(prevProps, prevState){\n    //   let store = this.store.getItem();\n    //   //console.log('prevState',prevState);\n    //   //console.log('store', store);\n    //   if(this.state.textFromHeaderInput !== prevState.textFromHeaderInput){\n    //     console.log('----');\n    //     console.log('store',store);\n    //     console.log('todoItems',this.state.todoItems);\n    //     this.setState({\n    //       todoItems: store,\n    //     });\n    //   }\n    // }\n\n  }, {\n    key: \"updateItemsStorage\",\n    value: function updateItemsStorage(newItem) {\n      var array = this.store.getItem() || [];\n      array.push(newItem);\n      this.store.setItem(array);\n    }\n  }, {\n    key: \"updateCounter\",\n    value: function updateCounter() {\n      var array = this.store.getItem() || [];\n      var counter = 0;\n\n      if (array.length !== 0) {\n        array.forEach(function (el) {\n          if (!el.checked) counter++;\n        });\n      }\n\n      return counter;\n    }\n  }, {\n    key: \"completedCounter\",\n    value: function completedCounter() {\n      var array = this.store.getItem() || [];\n      var counter = 0;\n\n      if (array.length !== 0) {\n        array.forEach(function (el) {\n          if (el.checked) counter++;\n        });\n      }\n\n      return counter;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var quantityItems = this.store.getItem().length;\n      return React.createElement(\"section\", {\n        className: \"todo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Header, {\n        update: this.handleChangeInput,\n        save: this.handleSubmitInput,\n        value: this.state.textFromHeaderInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(Main, {\n        items: this.state.todoItems,\n        quantityItems: quantityItems,\n        store: this.store,\n        reRender: this.filterUpdate,\n        completedCounter: this.completedCounter(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        nowShowing: this.state.nowShowing,\n        count: this.updateCounter(),\n        quantityItems: quantityItems,\n        completedCounter: this.completedCounter(),\n        filterUpdate: this.filterUpdate,\n        clearChecked: this.clearCheckedElements,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/qa/project/react/todoReactRedux/src/App/App.js"],"names":["React","Store","Header","Main","Footer","initialValue","filter","initState","setItem","filterItem","App","props","handleChangeInput","e","setState","textFromHeaderInput","target","value","handleSubmitInput","keyCode","preventDefault","todoItems","state","slice","val","trim","newItem","id","Date","now","checked","concat","updateItemsStorage","filterUpdate","filterName","array","store","getItem","ff","name","undefined","newArray","length","el","nowShowing","clearCheckedElements","element","push","counter","forEach","quantityItems","completedCounter","updateCounter","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Store from './Store'\nimport Header from './Header/Header';\nimport Main from './Main/Main';\nimport Footer from './Footer/Footer';\n\n\nconst initialValue = {\n  filter: 'all'\n};\n\nlet initState = new Store('initState');\ninitState.setItem(initialValue);\n\nlet filterItem = new Store('filterItem');\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      todoItems: [],\n      textFromHeaderInput: '',\n      nowShowing: '',\n    };\n    this.store = new Store('items');\n  }\n\n  componentDidMount(){\n    this.filterUpdate();\n  }\n\n  // componentDidUpdate(prevProps, prevState){\n  //   let store = this.store.getItem();\n  //   //console.log('prevState',prevState);\n  //   //console.log('store', store);\n\n  //   if(this.state.textFromHeaderInput !== prevState.textFromHeaderInput){\n  //     console.log('----');\n  //     console.log('store',store);\n  //     console.log('todoItems',this.state.todoItems);\n  //     this.setState({\n  //       todoItems: store,\n  //     });\n  //   }\n  // }\n\n  handleChangeInput = (e) => {\n    this.setState({\n      textFromHeaderInput: e.target.value\n    });\n  }\n\n  handleSubmitInput = (e) => {\n    if (e.keyCode !== 13) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const todoItems = this.state.todoItems.slice();\n    let val = this.state.textFromHeaderInput.trim();\n\n    if(!val){\n      return;\n    }\n\n    const newItem = {\n      id: Date.now(),\n      value: this.state.textFromHeaderInput,\n      checked: false\n    };\n\n    this.setState({\n      todoItems: todoItems.concat(newItem),\n      textFromHeaderInput: ''\n    });\n\n    this.updateItemsStorage(newItem);\n    this.filterUpdate();\n  }\n\n  updateItemsStorage(newItem){\n    const array = this.store.getItem() || [];\n\n    array.push(newItem)\n\n    this.store.setItem(array);\n  }\n\n\n  updateCounter(){\n    const array = this.store.getItem() || [];\n    let counter = 0;\n\n    if(array.length !== 0){\n      array.forEach(el => {\n        if(!el.checked) counter++;\n      });\n    }\n\n    return counter;\n  }\n\n  completedCounter(){\n    const array = this.store.getItem() || [];\n    let counter = 0;\n\n    if(array.length !== 0){\n      array.forEach(el => {\n        if(el.checked) counter++;\n      });\n    }\n\n    return counter;\n  }\n\n  filterUpdate = (filterName) => {\n    const array = this.store.getItem() || [];\n    const ff = filterItem.getItem() !== null ?\n      filterItem.getItem()\n        : initState.getItem().filter;\n    const name = filterName !== undefined ?\n      filterName\n        : ff;\n    let newArray = [];\n\n    if(array.length !== 0){\n      newArray = name === 'active' ?\n        array.filter(el=> el.checked === false)\n          : name === 'completed' ?\n          array.filter(el=> el.checked === true)\n            : array;\n    }\n\n    filterItem.setItem(name);\n    this.setState({\n      todoItems: newArray,\n      nowShowing : name,\n    });\n  }\n\n\n  clearCheckedElements = () => {\n    const array = this.store.getItem() || [];\n\n    if(array.length !== 0){\n      this.store.setItem(array.filter(element=> !element.checked));\n    }\n\n    this.filterUpdate();\n  }\n\n  render(){\n    const quantityItems = this.store.getItem().length;\n\n    return(\n      <section className='todo'>\n        <Header\n          update={this.handleChangeInput}\n          save={this.handleSubmitInput}\n          value={this.state.textFromHeaderInput}\n        />\n        <Main\n          items={this.state.todoItems}\n          quantityItems={quantityItems}\n          store={this.store}\n          reRender={this.filterUpdate}\n          completedCounter={this.completedCounter()}\n        />\n        <Footer\n          nowShowing={this.state.nowShowing}\n          count={this.updateCounter()}\n          quantityItems={quantityItems}\n          completedCounter={this.completedCounter()}\n          filterUpdate={this.filterUpdate}\n          clearChecked={this.clearCheckedElements}\n        />\n      </section>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}